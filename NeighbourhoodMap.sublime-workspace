{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 825,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var ApplicationViewModel = function() {\n	var self = this;\n	var map;\n	var currentOpenedInfowindow;\n	var currentMarkers = [];\n	var defaultNeighborhood = \"Moscow\";\n	var myLatLng = {lat: -34.397, lng: 150.644};\n	\n	self.neighborhood = ko.observable(defaultNeighborhood); \n\n	var initMap = function() {\n		// Create a map object and specify the DOM element for display.\n		map = new google.maps.Map(document.getElementById('map'), {\n			center: myLatLng,\n			zoom: 8,\n			mapTypeControl: false,\n			streetViewControl: false\n		});\n	}\n	\n	var addMarkerToMap = function(location) {\n  \n		var marker = new google.maps.Marker({\n			position: { lat:location.lantitude , lng:location.longtitide },\n			map: map\n		});\n		\n		var img;\n		if (location.thumbnail !== '')\n			img = '<img src=\"' + location.thumbnail + '\" class=\"thumbnail\">';\n		else\n			img = '';\n			\n		var contentString = '<div id=\"content\">'+\n			'<div id=\"siteNotice\">'+\n			'</div>'+\n			'<div id=\"bodyContent\">'+\n			'<h3>' + location.name + '</h3>' +\n			img +\n			'<p>' + location.caption + '</p>'+\n			'</div>'+\n			'</div>';\n			\n		var infowindow = new google.maps.InfoWindow({\n			content: contentString\n		});\n		\n		marker.addListener('click', (function(infWnd ) {\n			return function() {\n				if (currentOpenedInfowindow)\n					currentOpenedInfowindow.close();\n				infWnd.open(map, marker);\n				currentOpenedInfowindow = infWnd;\n			};\n		})(infowindow));\n		\n		currentMarkers.push(marker);\n	}\n	initMap();\n	\n	var foursquareRequestCompleted = function( data ) {\n		\n		var results = data.response.group.results;\n		if (results) {\n			if (results.length > 0) {\n				var targetIndex = Math.floor(results.length/2);\n				var target = results[targetIndex];\n				var mapZoom = { lat: target.venue.location.lat, lng: target.venue.location.lng };\n				map.setZoom(10);\n				map.panTo(mapZoom);\n			}\n			 \n			results.forEach(function( item ) {\n				var latitude = item.venue.location.lat;\n				var longtitude = item.venue.location.lng;\n				var name = item.venue.name;\n				var caption;\n				if (item.snippets.items.length > 0 && \n					item.snippets.items[0].hasOwnProperty('detail') &&\n					item.snippets.items[0].detail.hasOwnProperty('object') &&\n					item.snippets.items[0].detail.object.hasOwnProperty('text'))\n					caption = item.snippets.items[0].detail.object.text;\n				else\n					caption = '';\n				\n				var photo;\n				if (item.hasOwnProperty('photo'))\n					photo = item.photo.prefix + '100x100' + item.photo.suffix;\n				else\n					photo = '';\n				\n	\n				var loc = new Location(latitude, longtitude, name, caption, photo);\n				addMarkerToMap(loc);\n			});\n		}\n	} \n	\n	var clearMarkers = function() {\n		for ( var i = 0; i < currentMarkers.length; ++i ) {\n			currentMarkers[i].setMap(null);\n		}\n		currentMarkers.length = 0;\n	}\n	\n	self.computedMarkers = ko.computed(function() {\n		if (self.neighborhood() !== '') {\n			clearMarkers();\n			var foursquareLink = 'https://api.foursquare.com/v2/search/recommendations?m=foursquare&near='+self.neighborhood()+'&oauth_token=MRX15WXU5C42TF0ZI12BNY4GFIFNBYFVMJWXITDDTOUFYIRL&v=20151103';\n			//var foursquareLink = 'https://api.foursquare.com/v2/venues/explore?near='+encodeURIComponent(self.neighborhood())+'&oauth_token=5WJZ5GSQURT4YEG251H42KKKOWUNQXS5EORP2HGGVO4B14AB&v=20151103'; \n			$.getJSON(foursquareLink, foursquareRequestCompleted)\n			.fail(function() {})\n	    }\n	});\n\n	\n\n}\n\n// initialize the view model binding\n$(function() {\n  ko.applyBindings(new ApplicationViewModel());\n});\n",
			"file": "js/app.js",
			"file_size": 3432,
			"file_write_time": 130910383070000000,
			"settings":
			{
				"buffer_size": 3431,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/location.js",
			"settings":
			{
				"buffer_size": 207,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/maps.js",
			"settings":
			{
				"buffer_size": 1188,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "{\n  \"name\": \"Neighborhood_Map\",\n  \"homepage\": \"https://github.com/bohulenkov14/Neighbourhood_Map\",\n  \"description\": \"Google map integration project\",\n  \"main\": \"index.html\",\n  \"moduleType\": [],\n  \"keywords\": [\n    \"udacity\",\n    \"knockout\",\n    \"google\",\n    \"maps\"\n  ],\n  \"authors\": [\n    \"Bohulenkov A.S.\"\n  ],\n  \"license\": \"MIT\",\n  \"private\": true,\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ],\n  \"dependencies\": {\n    \"knockout\": \"~3.3.0\",\n    \"jquery\": \"~2.1.4\"\n  }\n}\n",
			"file": "bower.json",
			"file_size": 527,
			"file_write_time": 130908792600000000,
			"settings":
			{
				"buffer_size": 527,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/artembohulenkov/Desktop/udacity/Neighbourhood_Map",
		"/Users/artembohulenkov/Desktop/udacity/Neighbourhood_Map/js"
	],
	"file_history":
	[
		"/Users/artembohulenkov/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/artembohulenkov/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/artembohulenkov/Library/Application Support/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/Users/artembohulenkov/Library/Application Support/Sublime Text 3/Packages/User/Distraction Free.sublime-settings",
		"/Users/artembohulenkov/Desktop/udacity/Neighbourhood_Map/NeighbourhoodMap.sublime-project"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 825,
						"regions":
						{
						},
						"selection":
						[
							[
								498,
								498
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "js/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3431,
						"regions":
						{
						},
						"selection":
						[
							[
								267,
								267
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js/location.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 207,
						"regions":
						{
						},
						"selection":
						[
							[
								205,
								205
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js/maps.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1188,
						"regions":
						{
						},
						"selection":
						[
							[
								338,
								338
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "bower.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 527,
						"regions":
						{
						},
						"selection":
						[
							[
								307,
								307
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "NeighbourhoodMap.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
